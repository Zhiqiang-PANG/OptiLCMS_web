% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Optimize_params.R
\name{PerformParamsOptimization}
\alias{PerformParamsOptimization}
\title{Perform Parameters Optimization}
\usage{
PerformParamsOptimization(
  mSet,
  param = NULL,
  method = "DoE",
  ncore = 4,
  running.controller = NULL
)
}
\arguments{
\item{mSet}{mSet object, usually generated by 'PerformROIExtraction' or 'PerformDataTrimming' here.}

\item{param}{List, Parameters defined by 'SetPeakParam' function.}

\item{method}{Character, method of parameters optimization, including "DoE' only. Default is "DoE". Other method
is under development.}

\item{ncore}{Numeric, CPU threads number used to perform the parallel based optimization. If thers is memory issue,
please reduce the 'ncore' used here. For default, 2/3 CPU threads of total will be used.}

\item{running.controller}{The resuming pipeline running controller. Optional. Don't need to define by hand.}
}
\description{
This function is used to optimize the critical parameters of peak picking and alignment for
the following data processing. It utilizes the trimed data and the internal instrument-specific parameters.
Parallel computing will be performed. The number of cores user want to use could be specified.
}
\examples{
## load googledrive package to download example data
# library("googledrive");

## Set data folder
# data_folder_Sample <- "~/Data_IBD";
# data_folder_QC <- "~/Data_IBD/QC";
# temp <- tempfile(fileext = ".zip");

## Please authorize the package to download the data from web
# dl <- drive_download(as_id("1CjEPed1WZrwd5T3Ovuic1KVF-Uz13NjO"), path = temp, overwrite = TRUE);
# out <- unzip(temp, exdir = data_folder_Sample);
# out;
#### Running as regular procedure: step by step
## Extract ROI for parameters' optimization
# mSet <- PerformROIExtraction(datapath = data_folder_QC, rt.idx = 0.95, plot = F, rmConts = F);
## Perform the optimization
# best_parameters <- PerformParamsOptimization(mSet = mSet, SetPeakParam(), ncore = 4);
## Perform data import of all samples
# mSet <- ImportRawMSData(mSet = mSet, foldername = data_folder_Sample, 
#                         plotSettings = SetPlotParam(Plot=T));
## Perform peak profiling
# mSet <- PerformPeakProfiling(mSet = mSet, Params = param, plotSettings = SetPlotParam(Plot=T));
## Set annotation parameters
# annParams <- SetAnnotationParam(polarity = 'negative', mz_abs_add = 0.025);
## Perform peak annotation
# mSet <- PerformPeakAnnotation(mSet = mSet, annotaParam = annParams, ncore =1);
## Format the peak table
# maPeaks <- FormatPeakList(mSet = mSet, annParams, filtIso =F, 
#                           filtAdducts = FALSE, missPercent = 1);

#### Running as resumable procedure: seamless pipeline
## load googledrive package to download example data
# library("googledrive");

# Set data folder
# data_folder_Sample <- "~/Data_IBD";
# temp <- tempfile(fileext = ".zip");

# Please authorize the package to download the data from web
# dl <- drive_download(as_id("1CjEPed1WZrwd5T3Ovuic1KVF-Uz13NjO"), path = temp, overwrite = TRUE);
# out <- unzip(temp, exdir = data_folder_Sample);
# out;
#### Running as resumable procedure: seamless pipeline
## Initialize running plan
# plan <- InitializaPlan("raw_opt","~/Data_IBD/")
## define/set running plan
# plan <- running.plan(plan,
#                      data_folder_QC <- "~/Data_IBD/QC",
#                      mSet <- PerformROIExtraction(datapath = data_folder_QC, 
#                                                   rt.idx = 0.95, plot = F, 
#                                                   rmConts = F, 
#                                                   running.controller = rc),
#                      param_initial <- SetPeakParam(),
#                      best_parameters <- PerformParamsOptimization(mSet = mSet, 
#                                                   param_initial, ncore = 2, 
#                                                   running.controller = rc),
#                      data_folder_Sample <- '',
#                      param <- best_parameters,
#                      plotSettings1 <- SetPlotParam(Plot=T),
#                      plotSettings2 <- SetPlotParam(Plot=T),
#                      mSet <- ImportRawMSData(mSet = mSet, 
#                                              foldername = data_folder_Sample, 
#                                              plotSettings = plotSettings1, 
#                                              running.controller = rc),
#                      mSet <- PerformPeakProfiling(mSet = mSet, 
#                                              Params = param, 
#                                              plotSettings = plotSettings2, 
#                                              running.controller = rc),
#                      annParams <- SetAnnotationParam(polarity = 'negative', 
#                                              mz_abs_add = 0.025),
#                      mSet <- PerformPeakAnnotation(mSet = mSet, 
#                                              annotaParam = annParams, 
#                                              ncore =1, 
#                                              running.controller = rc),
#                      maPeaks <- FormatPeakList(mSet = mSet, annParams, filtIso =F, 
#                                              filtAdducts = FALSE, 
#                                              missPercent = 1));
## Execute the defined plan
# ExecutePlan(plan)
}
\author{
Zhiqiang Pang \email{zhiqiang.pang@mail.mcgill.ca} Jeff Xia \email{jeff.xia@mcgill.ca}
Mcgill University
License: GNU GPL (>= 2)
}
