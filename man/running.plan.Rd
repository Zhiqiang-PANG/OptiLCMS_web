% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Resume_functions.R
\name{running.plan}
\alias{running.plan}
\title{running.plan}
\usage{
running.plan(plan = NULL, ...)
}
\arguments{
\item{plan}{ResummingPlan object. The object is generated by 'InitializaPlan' function.}

\item{...}{Multiple Processing commands can be input here.}
}
\description{
running.plan
}
\examples{
## load googledrive package to download example data
# library("googledrive");

# Set data folder
# data_folder_Sample <- "~/Data_IBD";
# data_folder_QC <- "~/Data_IBD/QC";
# temp <- tempfile(fileext = ".zip");

# Please authorize the package to download the data from web
# dl <- drive_download(as_id("1CjEPed1WZrwd5T3Ovuic1KVF-Uz13NjO"), path = temp, overwrite = TRUE);
# out <- unzip(temp, exdir = data_folder_Sample);
# out;
#### Running as resumable procedure: seamless pipeline
## Initialize running plan
plan <- InitializaPlan("raw_opt","~/Data_IBD/")
## define/set running plan
plan <- running.plan(plan,
                     data_folder_QC <- data_folder_QC,
                     mSet <- PerformROIExtraction(datapath = data_folder_QC, rt.idx = 0.95, plot = F, rmConts = F, running.controller = rc),
                     param_initial <- SetPeakParam(),
                     best_parameters <- PerformParamsOptimization(mSet = mSet, param_initial, ncore = 2, running.controller = rc),
                     data_folder_Sample <- '',
                     param <- best_parameters,
                     plotSettings1 <- SetPlotParam(Plot=T),
                     plotSettings2 <- SetPlotParam(Plot=T),
                     mSet <- ImportRawMSData(mSet = mSet, foldername = data_folder_Sample, plotSettings = plotSettings1, running.controller = rc),
                     mSet <- PerformPeakProfiling(mSet = mSet, Params = param, plotSettings = plotSettings2, running.controller = rc),
                     annParams <- SetAnnotationParam(polarity = 'negative', mz_abs_add = 0.025),
                     mSet <- PerformPeakAnnotation(mSet = mSet, annotaParam = annParams, ncore =1, running.controller = rc),
                     maPeaks <- FormatPeakList(mSet = mSet, annParams, filtIso =F, filtAdducts = FALSE,missPercent = 1));
## Execute the defined plan
# ExecutePlan(plan)

#' # revise running plan, for example, revise mz_abs_add as 0.030
plan <- running.plan(plan,
                     data_folder_QC <- data_folder_QC,
                     mSet <- PerformROIExtraction(datapath = data_folder_QC, rt.idx = 0.95, plot = F, rmConts = F, running.controller = rc),
                     param_initial <- SetPeakParam(),
                     best_parameters <- PerformParamsOptimization(mSet = mSet, param_initial, ncore = 2, running.controller = rc),
                     data_folder_Sample <- '',
                     param <- best_parameters,
                     plotSettings1 <- SetPlotParam(Plot=T),
                     plotSettings2 <- SetPlotParam(Plot=T),
                     mSet <- ImportRawMSData(mSet = mSet, foldername = data_folder_Sample, plotSettings = plotSettings1, running.controller = rc),
                     mSet <- PerformPeakProfiling(mSet = mSet, Params = param, plotSettings = plotSettings2, running.controller = rc),
                     annParams <- SetAnnotationParam(polarity = 'negative', mz_abs_add = 0.030),
                     mSet <- PerformPeakAnnotation(mSet = mSet, annotaParam = annParams, ncore =1, running.controller = rc),
                     maPeaks <- FormatPeakList(mSet = mSet, annParams, filtIso =F, filtAdducts = FALSE,missPercent = 1));
## Re-execute the defined plan, unnecessary steps will be skipped
# ExecutePlan(plan)
}
\author{
Zhiqiang Pang \email{zhiqiang.pang@mail.mcgill.ca} Jeff Xia \email{jeff.xia@mcgill.ca}
Mcgill University
License: GNU GPL (>= 2)
}
