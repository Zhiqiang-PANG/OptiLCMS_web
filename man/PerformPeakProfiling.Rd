% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Perform_functions.R
\name{PerformPeakProfiling}
\alias{PerformPeakProfiling}
\title{Perform peak profiling
This function performs feature extraction of user's raw MS data using
the rawData object created using the ImportRawMSData function.}
\usage{
PerformPeakProfiling(
  mSet,
  Params = NULL,
  plotSettings,
  ncore,
  running.controller = NULL
)
}
\arguments{
\item{mSet}{The object created using the ImportRawMSData function,
containing the raw MS data.}

\item{Params}{The object created using the SetPeakParam function,
containing user's specified or default parameters for downstream
raw MS data pre-processing.}

\item{plotSettings}{List, plotting parameters produced by SetPlotParam Function.
Defaut is set to true.}

\item{ncore}{Numeric, used to define the cores' number for Peak Profiling.}

\item{running.controller}{The resuming pipeline running controller. Optional. Don't need to define by hand.}
}
\description{
Perform peak profiling
This function performs feature extraction of user's raw MS data using
the rawData object created using the ImportRawMSData function.
}
\examples{
## load googledrive package to download example data
# library("googledrive");

## Set data folder
# data_folder_Sample <- "~/Data_IBD";
# data_folder_QC <- "~/Data_IBD/QC";
# temp <- tempfile(fileext = ".zip");

## Please authorize the package to download the data from web
# dl <- drive_download(as_id("1CjEPed1WZrwd5T3Ovuic1KVF-Uz13NjO"), path = temp, overwrite = TRUE);
# out <- unzip(temp, exdir = data_folder_Sample);
# out;
#### Running as regular procedure: step by step
## Extract ROI for parameters' optimization
# mSet <- PerformROIExtraction(datapath = data_folder_QC, rt.idx = 0.95, plot = F, rmConts = F);
## Perform the optimization
# best_parameters <- PerformParamsOptimization(mSet = mSet, SetPeakParam(), ncore = 4);
## Perform data import of all samples
# mSet <- ImportRawMSData(mSet = mSet, foldername = data_folder_Sample, 
#                         plotSettings = SetPlotParam(Plot=T));
## Perform peak profiling
# mSet <- PerformPeakProfiling(mSet = mSet, Params = param, plotSettings = SetPlotParam(Plot=T));
## Set annotation parameters
# annParams <- SetAnnotationParam(polarity = 'negative', mz_abs_add = 0.025);
## Perform peak annotation
# mSet <- PerformPeakAnnotation(mSet = mSet, annotaParam = annParams, ncore =1);
## Format the peak table
# maPeaks <- FormatPeakList(mSet = mSet, annParams, filtIso =F, 
#                           filtAdducts = FALSE,missPercent = 1);
}
\author{
Zhiqiang Pang \email{zhiqiang.pang@mail.mcgill.ca}, Jasmine Chong \email{jasmine.chong@mail.mcgill.ca},
Mai Yamamoto \email{yamamoto.mai@mail.mcgill.ca}, and Jeff Xia \email{jeff.xia@mcgill.ca}
McGill University, Canada
License: GNU GPL (>= 2)
}
